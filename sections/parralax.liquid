{% style %}
  .parallax-{{ section.id }} {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .parallax-{{ section.id }}__slide {
    position: relative;
    height: {{ section.settings.par_img_sz | default: 400 }}px;
  }

  .parallax-{{ section.id }}__media {
    position: absolute;
    inset: -10% 0; /* déborde un peu pour éviter les bords vides pendant le translate */
    will-change: transform;
  }

  .parallax-{{ section.id }}__img {
    width: 100%;
    height: 120%; /* plus haut que le conteneur pour le mouvement */
    object-fit: cover;
    display: block;
  }

  /* Overlay optionnel */
  {% if section.settings.par-en-over %}
  .parallax-{{ section.id }}__overlay {
    position: absolute;
    inset: 0;
    background: {{ section.settings.color_over }};
    opacity: {{ section.settings.par_opacity | times: 0.01 }};
    pointer-events: none;
  }
  {% endif %}

  /* Bloc texte */
  .parallax-{{ section.id }}__content {
    position: absolute;
    top: {{ section.settings.par_txt_top_pos | default: 50 }}%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: min(90%, 1200px);
    text-align: {{ section.settings.par_txt_align | default: 'left' }};
    z-index: 2;
  }

  .txt-par1-hd--{{ section.id }} {
    font-weight: 700;
    font-size: {{ section.settings.par_hd_sz | default: 55 }}px;
    letter-spacing: {{ section.settings.par_letter_sp | default: 1 }}px;
    color: #fff;
    margin: 0 0 .25em 0;
  }

  .txt-par1-subhd--{{ section.id }} {
    font-size: {{ section.settings.par_subhd_sz | default: 25 }}px;
    letter-spacing: {{ section.settings.par_letter_sp | default: 1 }}px;
    color: #fff;
    margin: 0 0 1rem 0;
  }

  .par1_button--{{ section.id }} {
    display: inline-block;
    border: 1px solid #fff;
    background: transparent;
    color: #fff;
    font-size: {{ section.settings.par_button_sz | default: 25 }}px;
    letter-spacing: {{ section.settings.par_letter_sp | default: 1 }}px;
    padding: .6rem 1.2rem;
    text-decoration: none;
  }

  /* Mobile/tablette — on GARDE l’affichage */
  @media (max-width: 767px) {
    .txt-par1-hd--{{ section.id }} { font-size: clamp(26px, 6vw, {{ section.settings.par_hd_sz | default: 55 }}px); }
    .txt-par1-subhd--{{ section.id }} { font-size: clamp(16px, 4.2vw, {{ section.settings.par_subhd_sz | default: 25 }}px); }
    .parallax-{{ section.id }}__slide { height: max(260px, {{ section.settings.par_img_sz | default: 400 }}px * 0.7); }
  }

  /* Accessibilité : désactive l’effet si l’utilisateur préfère moins d’animations */
  @media (prefers-reduced-motion: reduce) {
    .parallax-{{ section.id }}__media { transform: none !important; }
  }
{% endstyle %}

<div class="parallax-{{ section.id }}{% unless section.settings['paral-full'] %} page-width{% endunless %}">
  {% for block in section.blocks %}
    {% if block.settings.image != blank %}
      {% assign speed_raw = block.settings.par_speed_block | default: section.settings.par_speed | default: 35 %}
      <section
        class="parallax-{{ section.id }}__slide"
        data-parallax
        data-speed="{{ speed_raw | divided_by: 100.0 }}"
      >
        <div class="parallax-{{ section.id }}__media">
          <img
            class="parallax-{{ section.id }}__img"
            loading="lazy"
            src="{{ block.settings.image | img_url: '2048x' }}"
            srcset="
              {{ block.settings.image | img_url: '800x' }} 800w,
              {{ block.settings.image | img_url: '1200x' }} 1200w,
              {{ block.settings.image | img_url: '1600x' }} 1600w,
              {{ block.settings.image | img_url: '2048x' }} 2048w
            "
            sizes="100vw"
            alt="{{ block.settings.image.alt | escape }}"
          >
        </div>

        {% if section.settings['par-en-over'] %}
          <span class="parallax-{{ section.id }}__overlay" aria-hidden="true"></span>
        {% endif %}

        <div class="parallax-{{ section.id }}__content">
          {% if block.settings['txt1-hd1'] != blank %}
            {% case block.settings['parallax-h'] %}
              {% when 'h1' %}
                <h1 class="txt-par1-hd--{{ section.id }}">{{ block.settings['txt1-hd1'] }}</h1>
              {% when 'h2' %}
                <h2 class="txt-par1-hd--{{ section.id }}">{{ block.settings['txt1-hd1'] }}</h2>
              {% else %}
                <h3 class="txt-par1-hd--{{ section.id }}">{{ block.settings['txt1-hd1'] }}</h3>
            {% endcase %}
          {% endif %}

          {% if block.settings['txt1-hd2'] != blank %}
            {% if section.settings['parallax-subh'] == 'h2' %}
              <h2 class="txt-par1-subhd--{{ section.id }}">{{ block.settings['txt1-hd2'] }}</h2>
            {% else %}
              <h3 class="txt-par1-subhd--{{ section.id }}">{{ block.settings['txt1-hd2'] }}</h3>
            {% endif %}
          {% endif %}

          {% if block.settings.par1_showbutton
            and block.settings.par1_button_label != blank
            and block.settings.par1_button_link != blank
          %}
            <a class="par1_button--{{ section.id }}" href="{{ block.settings.par1_button_link }}">
              {{ block.settings.par1_button_label | escape }}
            </a>
          {% endif %}
        </div>
      </section>
    {% else %}
      <div class="parallax-{{ section.id }}__slide">
        {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg' }}
      </div>
    {% endif %}
  {% endfor %}
</div>

<script>
  (function () {
    const sections = document.querySelectorAll('.parallax-{{ section.id }}__slide[data-parallax]');
    if (!sections.length) return;

    const prefersReduced = window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    if (prefersReduced) return;

    let ticking = false;

    function update() {
      for (const sec of sections) {
        const speed = parseFloat(sec.getAttribute('data-speed')) || 0.35;
        const media = sec.querySelector('.parallax-{{ section.id }}__media');
        if (!media) continue;

        const rect = sec.getBoundingClientRect();
        const vh = window.innerHeight || document.documentElement.clientHeight;

        // Ne calcule que si visible à l’écran
        if (rect.bottom >= 0 && rect.top <= vh) {
          // Progression: 0 (en haut de l’écran) -> 1 (en bas)
          const progress = (vh - rect.top) / (vh + rect.height);
          // Translate proportionnel à la hauteur du slide
          const translate = (progress - 0.5) * rect.height * speed;
          media.style.transform = `translate3d(0, ${translate.toFixed(2)}px, 0)`;
        }
      }
      ticking = false;
    }

    function onScroll() {
      if (ticking) return;
      ticking = true;
      requestAnimationFrame(update);
    }

    const io =
      'IntersectionObserver' in window
        ? new IntersectionObserver((entries) => {
            let anyVisible = false;
            for (const entry of entries) {
              if (entry.isIntersecting) {
                anyVisible = true;
                break;
              }
            }
            if (anyVisible) onScroll();
          })
        : null;

    sections.forEach((sec) => io && io.observe(sec));

    window.addEventListener('scroll', onScroll, { passive: true });
    window.addEventListener('resize', onScroll);
    window.addEventListener('orientationchange', onScroll);

    // Première passe
    onScroll();
  })();
</script>

{% schema %}
{
  "name": "Parallax",
  "settings": [
    {
      "type": "paragraph",
      "content": "Parallax fonctionne aussi sur mobile/tablette (sans background-attachment: fixed)."
    },
    { "type": "checkbox", "id": "paral-full", "label": "Full width", "default": true },
    { "type": "text", "id": "par_img_sz", "label": "Image height", "default": "400" },
    { "type": "text", "id": "par_hd_sz", "label": "Header text size", "default": "55" },
    { "type": "text", "id": "par_subhd_sz", "label": "Subheader size", "default": "25" },
    { "type": "text", "id": "par_button_sz", "label": "Button text size", "default": "25" },
    { "type": "text", "id": "par_letter_sp", "label": "Letter spacing", "default": "1" },
    {
      "type": "radio",
      "id": "par_txt_align",
      "options": [
        { "value": "right", "label": "Right" },
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Centered" }
      ],
      "label": "Text alignment",
      "default": "left"
    },
    { "type": "text", "id": "par_txt_top_pos", "label": "Text position in %", "default": "50" },
    { "type": "checkbox", "id": "par-en-over", "label": "Enable overlay", "default": true },
    { "type": "color", "id": "color_over", "label": "Overlay color", "default": "#000000" },
    {
      "type": "range",
      "id": "par_opacity",
      "label": "Opacity",
      "min": 1,
      "max": 100,
      "step": 1,
      "unit": "%",
      "default": 50
    },
    {
      "type": "range",
      "id": "par_speed",
      "label": "Default parallax speed (0–100)",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 35
    }
  ],
  "max_blocks": 3,
  "blocks": [
    {
      "type": "text",
      "name": "Parallax",
      "settings": [
        { "type": "image_picker", "id": "image", "label": "Image" },
        { "type": "text", "id": "txt1-hd1", "label": "Heading" },
        {
          "type": "select",
          "id": "parallax-h",
          "label": "Heading tag",
          "options": [
            { "value": "h1", "label": "h1" },
            { "value": "h2", "label": "h2" },
            { "value": "h3", "label": "h3" }
          ],
          "default": "h2"
        },
        { "type": "text", "id": "txt1-hd2", "label": "Subheading" },
        {
          "type": "select",
          "id": "parallax-subh",
          "label": "Subheading tag",
          "options": [
            { "value": "h2", "label": "h2" },
            { "value": "h3", "label": "h3" }
          ],
          "default": "h3"
        },
        { "type": "checkbox", "id": "par1_showbutton", "label": "Show button", "default": true },
        { "type": "text", "id": "par1_button_label", "label": "Button label" },
        { "type": "url", "id": "par1_button_link", "label": "Button link" },
        {
          "type": "range",
          "id": "par_speed_block",
          "label": "Parallax speed override (0–100)",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 35
        }
      ]
    }
  ],
  "presets": [{ "name": "Parallax", "category": "Layout" }]
}
{% endschema %}
